<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "htttp://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.community.dao.CommentMapper">
    
    <sql id="selectFields">
        id, user_id, entity_type, entity_id, target_id, content, status, create_time
    </sql>
    <sql id="insertFields">
        user_id, entity_type, entity_id, target_id, content, status, create_time
    </sql>

    <select id="selectCommentByEntity" resultType="com.example.community.entity.Comment">
        select id, user_id, entity_type, entity_id, target_id, content, status, create_time
        from comment
        where status = 0
        and entity_type = #{entityType}
        and entity_id = #{entityId}
        order by create_time asc
        limit #{offset}, #{limit}
    </select>

    <select id="selectCountByEntity" resultType="int">
        select count(id)
        from comment
        where status = 0
        and entity_type = #{entityType}
        and entity_id = #{entityId}
    </select>

    <insert id="insertComment" parameterType="com.example.community.entity.Comment">
        insert into comment(user_id, entity_type, entity_id, target_id, content, status, create_time)
        values(#{userId},#{entityType},#{entityId},#{targetId},#{content},#{status},#{createTime})
    </insert>

    <select id="selectCommentById" resultType="com.example.community.entity.Comment">
        select id, user_id, entity_type, entity_id, target_id, content, status, create_time
        from comment
        where id = #{id}
    </select>

    <select id="selectCommentCountById" resultType="int">
        select count(id)
        from comment
        where status = 0
        and user_id = #{id}
        and entity_type = 1
    </select>

    <select id="selectCommentsByUserId" resultType="com.example.community.entity.Comment">
        select id, user_id, entity_type, entity_id, target_id, content, status, create_time
        from comment
        where status = 0
        and user_id = #{id}
        and entity_type = 1
        order by create_time desc
        limit #{offset}, #{limit}
    </select>

    <update id="updateStatus">
        update comment set status = #{status}
        where entity_id = #{entityId}
        and entity_type = 1
    </update>

</mapper>
